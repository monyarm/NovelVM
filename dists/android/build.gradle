buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
    }
}

dependencies {
    repositories {
        google()
        jcenter()
    }
}

// Enable to see use of deprecated API
 tasks.withType(JavaCompile) {
     options.compilerArgs << "-Xlint:deprecation"
 }

apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    ndkVersion "21.3.6528147"

    defaultConfig {
        applicationId "org.novelvm.novelvm"

        setProperty("archivesBaseName", "NovelVM")

        minSdkVersion 16
        targetSdkVersion 29

        versionName "2.3.0git"
        versionCode 65
        // versioncode must be incremented for each market upload
        // NovelVM 2.3.0: 65-68 (arm-v7a, arm64-v8a, x86, x86_64 respectively)
        // Historical version codes:
        // NovelVM 2.2.1: 61-64 Play Store release version for 2.2.1 (arm-v7a, arm64-v8a, x86, x86_64 respectively)
        // NovelVM 2.2.1: 57-60 Beta 3 (arm-v7a, arm64-v8a, x86, x86_64 respectively)
        // NovelVM 2.2.1: 57-60 *Reserved for 2.2.1 stable/release* (arm-v7a, arm64-v8a, x86, x86_64 respectively)
        // NovelVM 2.2.1: 53-56 Beta 2 (arm-v7a, arm64-v8a, x86, x86_64 respectively)
        // NovelVM 2.2.1: 49-52 Beta 1 (29 Sep 2020) (arm-v7a, arm64-v8a, x86, x86_64 respectively)
        // NovelVM 2.2.0: 45-48 (arm-v7a, arm64-v8a, x86, x86_64 respectively -- armeabi was dropped)
        // NovelVM 2.1.1: 40-44 (armeabi, arm-v7a, arm64-v8a, x86, x86_64 respectively)
        // NovelVM 2.1.0: 35-39 (armeabi, arm-v7a, arm64-v8a, x86, x86_64 respectively)
        // NovelVM 2.0.0: 30-34
        // NovelVM 1.9.0.1: 25-28
        // NovelVM 1.9.0: 19
        // NovelVM 1.8.1: 15

    }
    buildTypes {
        debug{
            debuggable true
        }
        release {
            debuggable false
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled false

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            //shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
    }
    sourceSets {
        main {
            assets.srcDirs 'assets/'
            java.srcDirs srcdir + '/backends/platform/android/'
            jniLibs.srcDirs 'lib/'
            res.srcDirs srcdir + '/dists/android/res/'
            manifest.srcFile srcdir + '/dists/android/AndroidManifest.xml'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.documentfile:documentfile:1.0.1"
    implementation "androidx.appcompat:appcompat:1.2.0"
}
